version: '3'

vars:
  RUN_DIR_RESOLVED: "{{default .TASKFILE_DIR .RUN_DIR}}"

tasks:
  config:load:*:
    desc: "task kube:config:load:<dev/stage/prod>"
    vars:
      ENVIRONMENT: '{{index .MATCH 0}}'
      WORKDIR: '{{.RUN_DIR_RESOLVED}}'
    requires:
      vars:
        - AWS_REGION
        - name: ENVIRONMENT
          enum: [dev, stage, prod]
    env:
      KUBECONFIG: '{{.WORKDIR}}/k3s_kubeconfig_{{.ENVIRONMENT}}.yaml'
    cmds:
      - >-
        cd {{.WORKDIR}} &&
        nix develop --command
        aws ssm get-parameter
        --name /resourcing/{{.ENVIRONMENT}}/kubeconfig
        --with-decryption
        --query Parameter.Value
        --output text
        > $KUBECONFIG
      - >-
        cd {{.WORKDIR}} &&
        nix develop --command chmod go-r $KUBECONFIG

  config:clean:
    desc: "task kube:config:clean"
    cmds:
      - >-
        cd {{.RUN_DIR_RESOLVED}} &&
        nix develop --command
        rm -f k3s_kubeconfig_*.yaml

  wait-for:*:
    desc: "task kube:wait-for:<dev/stage/prod> -- <cmds>"
    deps:
      - config:load:{{.ENVIRONMENT}}
    vars:
      ENVIRONMENT: '{{index .MATCH 0}}'
      WORKDIR: '{{.RUN_DIR_RESOLVED}}'
    requires:
      vars:
        - name: ENVIRONMENT
          enum: [dev, stage, prod]
    env:
      KUBECONFIG: '{{.WORKDIR}}/k3s_kubeconfig_{{.ENVIRONMENT}}.yaml'
    preconditions:
      - sh: test -f $KUBECONFIG
        msg: "file {{.WORKDIR}}/k3s_kubeconfig_{{.ENVIRONMENT}}.yaml does not exist."
    cmds:
      - defer: { task: config:clean }
      - >-
        cd {{.WORKDIR}} &&
        nix develop --command
        kubectl
        rollout status
        {{.CLI_ARGS}}

  for-each-node:*:
    desc: "task kube:for-each-node:<dev/stage/prod> -- <cmds>"
    vars:
      ENVIRONMENT: '{{index .MATCH 0}}'
      WORKDIR: '{{.RUN_DIR_RESOLVED}}'
    requires:
      vars:
        - name: ENVIRONMENT
          enum: [dev, stage, prod]
    env:
      KUBECONFIG: '{{.WORKDIR}}/k3s_kubeconfig_{{.ENVIRONMENT}}.yaml'
    preconditions:
      - sh: test -f $KUBECONFIG
        msg: "file {{.WORKDIR}}/k3s_kubeconfig_{{.ENVIRONMENT}}.yaml does not exist."
    cmds:
      - >-
        cd {{.WORKDIR}} &&
        nix develop --command
        kubectl
        get nodes
        -o json
        | nix develop --command jq -r '
        .items
        .[]
        .metadata
        .name
        ' | while read -r node; do
          nix develop --command kubectl node-shell "$node" -- {{.CLI_ARGS}}
        done
